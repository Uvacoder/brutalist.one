/*! Version 19.11.25 */
@import "variables";

//@font-face {
//    font-family: 'CartographMonoCF';
//    src: url('/assets/fonts/CartographMonoCF-Regular.woff2') format('woff2');
//    font-weight: normal;
//    font-style: normal;
//
//}

html {
    font-size: $font-size;
}

body {
    font-family: $font;
    font-weight: 300;
    color: $c-text;
    font-size: 1rem;
    line-height: $line-height;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    margin: 0;
    min-height: 100vh;
    background-color: $c-bg;
    background-attachment: fixed;
    font-feature-settings: "tnum";
}

*,
*::before,
*::after {
    box-sizing: border-box;
}

#Page {
    min-height: 100vh;
    width: calc(100% - 4rem);
    max-width: 1200px;
    margin: 0 auto;
}

.page-wrapper {
    max-width: 700px;
    margin: 0 auto;

    &.narrow    {
        max-width: 500px;
    }
}

img {
    max-width: 100%;
    margin-bottom: $gap;
}

strong {
    font-family: $font-bold;
    color: $c-title;
    font-weight: normal;
}

::selection {
    color: $c-bg;
    background: $c-main;
}

a {
    text-decoration: none;
    color: $c-main;
    transition: all 0.2s ease-in-out;

    &.external {
        &::after {
            content: "\2197";
            display: inline-block;
            margin-left: 0.1rem;
            font-size: 0.7em;
        }
    }
}

h1, h2, h3, h4 {
    color: $c-title;
    line-height: 1.3;
    margin: $gap/3 0 0;
    font-size: 1rem;
}

h1  {
    font-size: calc(1.6rem + 4vw);

    span    {
        font-family: $font-bold;
        font-size: 1.4em;
        line-height: 1.3rem;
        position: relative;
        display: inline-block;
    }
}

.title {
    font-size: 2rem;
    margin-bottom: $gap/2;
}

.subtitle {
    font-size: 1.4rem;
    margin-bottom: $gap/2;
    font-family: $font;
    font-weight: bold;
}

p {
    margin: 0 0 $gap/3;
}

ol {
    text-align: left;
    counter-reset: a;
    padding-left: 1rem;
    margin: 1rem 0;

    > li {
        position: relative;
        margin: 0 0 0 1rem;
        list-style: none;

        &::before {
            content: counter(a);
            counter-increment: a 1;
            position: absolute;
            top: 4px;
            left: -2rem;
            width: 1rem;
            font-family: $font-bold;
            text-align: center;
            line-height: 1;
            font-size: 1rem;
        }

        h3 {
            line-height: 1.1;
        }
    }
}

.auto-columns {
    columns: 180px;
    column-gap: $gap;
}

[class*="grid-"] {
    display: grid;
    grid-gap: $gap;

    &.v-center {
        align-items: center;
    }

    &.baseline {
        align-items: baseline;
    }

    &.end {
        align-items: end;
    }
}

@for $i from 1 through $col-nr {
    .grid-#{$i}c {
        grid-template-columns: repeat($i, 1fr);
    }
}

.grid-3c    {
    grid-template-columns: repeat(3, auto);

    svg + h2  {
        background: url(../img/line-p.svg) no-repeat left top;
        background-size: 100% auto;
        margin-top: $gap/6;
        padding-top: $gap/6;
    }

    h2 + p   {
        font-size: 0.667rem;
        margin-bottom: 0;
    }
}

.span2 {
    grid-column: span 2;
}

section {
    margin: $gap auto;
}

header {
    padding: $gap/3 0;
    display: grid;
    grid-template-columns: 60px 1fr;
    grid-gap: $gap;
    align-items: center;

    a   {
        border-bottom: 0;
    }

    svg {
        width: 60px;
    }

    nav {
        justify-self: end;

        a {
            color: $c-text;
            margin-left: $gap/3;
        }
    }
}

main {
    position: relative;
    z-index: 6;
}

footer {
    padding: $gap 0;
    color: change-color($c-text, $alpha: 0.7);
    text-align: center;
    font-size: 0.667rem;

    a {
        color: change-color($c-text, $alpha: 0.7);
    }
}

@media (max-width: $breakpoint-tablet) {
}

@media (max-width: $breakpoint-mobile) {
    header {
        .container {
            nav {
                justify-self: start;

                a:not(.button) {
                    margin-right: 1rem;
                    margin-bottom: $gap/2;
                }

                .button {
                    border-width: 0 0 1px;
                    box-shadow: none;
                    border-radius: 0;
                    padding: 0 0 $gap/6;
                }
            }
        }
    }

    @for $i from 1 through 3 {
        .grid-#{$i}c {
            grid-template-columns: repeat(1, 100%) !important;
        }
    }

    .span2 {
        grid-column: span 1;
    }

    #header {
        padding-top: $gap;
        padding-bottom: $gap;
    }

    #footer {
        text-align: center;
        padding-top: $gap*1.5;
        padding-bottom: $gap*1.5;
    }
}

@media (max-width: $breakpoint-small) {
    header {
        position: relative;

        .container {
            grid-template-columns: repeat(1, 100%) !important;
        }
    }
}